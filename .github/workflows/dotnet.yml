name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  release:
    types: [published]

env:
  PROJECT_NAME: IntegreNet

  GITHUB_FEED: https://nuget.pkg.github.com/Tony-Mc/
  GITHUB_USER: Tony-Mc
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore -c Release

      - name: Publish
        run: dotnet publish --no-build --no-restore -c Release -o out

      - name: Unit Test
        run: dotnet test --no-build --verbosity normal ./out/IntegreNet.Tests.dll

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: out
          if-no-files-found: error

  integration:
    runs-on: ubuntu-latest

    needs: build

    steps:
      - uses: actions/checkout@v3

      - name: Download published artifacts
        uses: actions/download-artifact@v2
        with:
          name: build
      
      - name: Integration Test
        run: docker-compose -f ./.docker/docker-compose.yml run -v ${PWD}:/app --workdir /app sdk dotnet test --no-build --verbosity normal ./IntegreNet.Tests.Integration.dll

  pack-dev:
    runs-on: ubuntu-latest

    needs: [build, integration]

    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x

      - name: Create development package
        run: dotnet pack -v normal -c Release --include-symbols --include-source -p:PackageVersion=$GITHUB_RUN_ID src/$PROJECT_NAME/$PROJECT_NAME.*proj

      - name: Upload development package
        uses: actions/upload-artifact@v2
        with:
          name: nupkg
          path: ./src/${{ env.PROJECT_NAME }}/bin/Release/*.nupkg
  pack-release:
    runs-on: ubuntu-latest

    needs: [build, integration, pack-dev]

    if: github.event_name == 'release'

    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x

      - name: Create release package
        run: |
          arrTag=(${GITHUB_REF//\// })
          VERSION="${arrTag[2]}"
          echo Version: $VERSION
          VERSION="${VERSION//v}"
          echo Clean Version: $VERSION
          dotnet pack -v normal -c Release -p:PackageVersion=$VERSION -o nupkg src/$PROJECT_NAME/$PROJECT_NAME.*proj

      - name: Push to GitHub Feed
        run: |
          for f in ./nupkg/*.nupkg
          do
            echo "Uploading $f"
            curl -X PUT -u "$GITHUB_USER:$GITHUB_TOKEN" -F package=@$f $GITHUB_FEED
          done

